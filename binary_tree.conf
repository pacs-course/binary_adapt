# -*- GetPot -*-
#-------------------------------------------------------#
#	Parameter for the binary tree adaptive algorithm	#
#-------------------------------------------------------#

[binary_tree]

	[./algorithm]

		iteration_number = 45
		tolerance = 1E-14
		input_mesh = mesh_files/square.msh
		output_mesh = results/refined_square.msh

	[../]

	[./functions]

		#-----------------------------------------------#
		#	Functor libraries							#
		#-----------------------------------------------#
		#		available:	"interpolating_functions"	#
		#-----------------------------------------------#

		func_library = interpolating_functions

		#-----------------------------------------------------------#
		#	Functors made available by								#
		#	interpolating_functions library							#
		#-----------------------------------------------------------#
		#		available:	"sqrt_x"								#
		#					"x_squared"								#
		#					"x_exp_beta<40>"						#
		#					"half_step"								#
		#					"half_x"								#
		#					"half_square"							#
		#					"half_sqrt_x"							#
		#					"half_twenty"							#
		#					"advection_diffusion_solution<100>"		#
		#					"advection_diffusion_solution<-100>"	#
		#															#
		#					"mu_parser_expr"						#
		#															#
		#-----------------------------------------------------------#
		#	To configure the mu_parser_expr you have to				#
		#	write in func_library configuration file				#
		#-----------------------------------------------------------#

		functor = mu_parser_expr

	[../]

	[./mesh]

		#-----------------------------------#
		#	Refiner libraries				#
		#-----------------------------------#
		#		available:	"mesh_bridge"	#
		#-----------------------------------#

		mesh_library = mesh_bridge

		#-------------------------------#
		#	Refiners made available by	#
		#	mesh_bridge library			#
		#-------------------------------#
		#	available:	"libmesh"		#
		#-------------------------------#

		mesh_refiner = libmesh

	[../]

	[./quadrature]

#		TODO: by now geometries obtained by tensorization
#				cannot have different quadrature sources,
#				see refine_binary/src/LibraryInit.cpp for more info.
		#-----------------------------------#
		#	Quadrature rule libraries		#
		#	for each available geometry		#
		#-----------------------------------#

		[./ipercube]

			#---------------------------------------#
			#	available:	"mesh_quadrature"		#
			#				"sandia_quadrature"		#
			#---------------------------------------#

			quad_library = sandia_quadrature

		[../]

		[./triangle]

			#-----------------------------------#
			#	available:	"mesh_quadrature"	#
			#-----------------------------------#

			quad_library = mesh_quadrature

		[../]

	[../]

[../]
